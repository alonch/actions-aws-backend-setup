name: demo
on:
  push:
    branches:
      - main
env: 
  region: us-east-1
jobs:
  

  tf-plan:
    permissions: 
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.region }}
          role-to-assume: ${{ secrets.ROLE_ARN }}
          role-session-name: ${{ github.repository_owner }}-${{ github.actor }}
      - name: query dynamodb
        id: dynamodb
        env: 
          SERVICE: dynamodb
        run: | 
          arn=$(aws resourcegroupstaggingapi get-resources \
            --tag-filters Key=tf-backend,Values=true \
            --resource-type-filters $SERVICE \
            --query "ResourceTagMappingList[].ResourceARN" \
            --output text)
          echo "arn=$arn\n" >> $GITHUB~_OUTPUT
      - name: query s3
        id: s3
        env: 
          SERVICE: s3
        run: | 
          arn=$(aws resourcegroupstaggingapi get-resources \
            --tag-filters Key=tf-backend,Values=true \
            --resource-type-filters $SERVICE \
            --query "ResourceTagMappingList[].ResourceARN" \
            --output text)
          echo "arn=$arn\n" >> $GITHUB_OUTPUT
      - name: query kms
        id: kms
        env: 
          SERVICE: kms
        run: | 
          arn=$(aws resourcegroupstaggingapi get-resources \
            --tag-filters Key=tf-backend,Values=true \
            --resource-type-filters $SERVICE \
            --query "ResourceTagMappingList[].ResourceARN" \
            --output text)
          echo "arn=$arn\n" >> $GITHUB_OUTPUT

      - uses: hashicorp/setup-terraform@v3

      - run: | 
          terraform init \
            -backend-config="bucket=${{steps.outputs.s3.arn}}" \
            -backend-config="key=${{steps.outputs.kms.arn}}" \
            -backend-config="dynamodb_table=${{ steps.outputs.dynamodb.arn}}" \
            -backend-config="region=${{ env.region }}"
      